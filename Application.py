#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.0.3
#  in conjunction with Tcl version 8.6
#    Apr 20, 2020 07:16:40 PM PKT  platform: Windows NT

import sys
import ctypes
import platform
import joblib
import numpy as np
import os



try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import root_support
def make_dpi_aware():
    if int(platform.release()) >= 8:
        ctypes.windll.shcore.SetProcessDpiAwareness(True)

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    root_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    root_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
            
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font10 = "-family {Segoe UI} -size 10"
        font9 = "-family {Segoe UI} -size 11"

        top.geometry("600x572+323+132")
        top.minsize(176, 1)
        top.maxsize(1924, 1050)
        top.resizable(0, 0)
        top.title("ML Based Diagnosis")
        top.configure(borderwidth="1")
        top.configure(background="#F9C2DE")
        top.configure(height="1")
        top.configure(highlightbackground="#f0f0f0")
        top.configure(highlightcolor="black")
        top.configure(highlightthickness="1")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.Label0 = tk.Label(top)
        self.Label0.place(relx=0.133, rely=0.017, height=31, width=437)
        self.Label0.configure(activebackground="#e7e8fa")
        self.Label0.configure(activeforeground="#000000")
        self.Label0.configure(background="#fad4e7")
        self.Label0.configure(borderwidth="1")
        self.Label0.configure(compound='center')
        self.Label0.configure(disabledforeground="#a3a3a3")
        self.Label0.configure(font="-family {Segoe UI} -size 11 -weight bold")
        self.Label0.configure(foreground="#000000")
        self.Label0.configure(highlightbackground="#d9d9d9")
        self.Label0.configure(highlightcolor="black")
        self.Label0.configure(text='''ML Based Breast Cancer Diagnosis''')
        self.Label0.configure(underline="-5")

        self.Labelframe0 = tk.LabelFrame(top)
        self.Labelframe0.place(relx=0.033, rely=0.087, relheight=0.865
                , relwidth=0.933)
        self.Labelframe0.configure(relief='groove')
        self.Labelframe0.configure(font="-family {Segoe UI} -size 10 -weight bold -slant italic")
        self.Labelframe0.configure(foreground="black")
        self.Labelframe0.configure(text='''Attribute Information:''')
        self.Labelframe0.configure(background="#F9C2DE")
        self.Labelframe0.configure(highlightbackground="#d9d9d9")
        self.Labelframe0.configure(highlightcolor="black")

        self.Label1 = tk.Label(self.Labelframe0)
        self.Label1.place(relx=0.018, rely=0.081, height=30, width=282
                , bordermode='ignore')
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="#fdf2f8")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font=font9)
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Clump Thickness:''')

        self.Label2 = tk.Label(self.Labelframe0)
        self.Label2.place(relx=0.018, rely=0.152, height=30, width=282
                , bordermode='ignore')
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(anchor='w')
        self.Label2.configure(background="#fdf2f8")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(font=font9)
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Uniformity of Cell Size:''')

        self.Label3 = tk.Label(self.Labelframe0)
        self.Label3.place(relx=0.018, rely=0.222, height=30, width=282
                , bordermode='ignore')
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(anchor='w')
        self.Label3.configure(background="#fdf2f8")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(font=font9)
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''Uniformity of Cell Shape:''')

        self.Label4 = tk.Label(self.Labelframe0)
        self.Label4.place(relx=0.018, rely=0.293, height=30, width=282
                , bordermode='ignore')
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(anchor='w')
        self.Label4.configure(background="#fdf2f8")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(font=font9)
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''Marginal Adhesion:''')

        self.Label5 = tk.Label(self.Labelframe0)
        self.Label5.place(relx=0.018, rely=0.364, height=30, width=282
                , bordermode='ignore')
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(activeforeground="black")
        self.Label5.configure(anchor='w')
        self.Label5.configure(background="#fdf2f8")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(font=font9)
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#d9d9d9")
        self.Label5.configure(highlightcolor="black")
        self.Label5.configure(text='''Marginal Adhesion:''')

        self.Label6 = tk.Label(self.Labelframe0)
        self.Label6.place(relx=0.018, rely=0.434, height=30, width=282
                , bordermode='ignore')
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(activeforeground="black")
        self.Label6.configure(anchor='w')
        self.Label6.configure(background="#fdf2f8")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(font=font9)
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(highlightbackground="#d9d9d9")
        self.Label6.configure(highlightcolor="black")
        self.Label6.configure(text='''Bare Nuclei:''')

        self.Label7 = tk.Label(self.Labelframe0)
        self.Label7.place(relx=0.018, rely=0.505, height=30, width=282
                , bordermode='ignore')
        self.Label7.configure(activebackground="#f9f9f9")
        self.Label7.configure(activeforeground="black")
        self.Label7.configure(anchor='w')
        self.Label7.configure(background="#fdf2f8")
        self.Label7.configure(disabledforeground="#a3a3a3")
        self.Label7.configure(font=font9)
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(highlightbackground="#d9d9d9")
        self.Label7.configure(highlightcolor="black")
        self.Label7.configure(text='''Bland Chromatin:''')

        self.Label8 = tk.Label(self.Labelframe0)
        self.Label8.place(relx=0.018, rely=0.576, height=30, width=282
                , bordermode='ignore')
        self.Label8.configure(activebackground="#f9f9f9")
        self.Label8.configure(activeforeground="black")
        self.Label8.configure(anchor='w')
        self.Label8.configure(background="#fdf2f8")
        self.Label8.configure(disabledforeground="#a3a3a3")
        self.Label8.configure(font=font9)
        self.Label8.configure(foreground="#000000")
        self.Label8.configure(highlightbackground="#d9d9d9")
        self.Label8.configure(highlightcolor="black")
        self.Label8.configure(text='''Normal Nucleoli:''')

        self.Label9 = tk.Label(self.Labelframe0)
        self.Label9.place(relx=0.018, rely=0.646, height=30, width=282
                , bordermode='ignore')
        self.Label9.configure(activebackground="#f9f9f9")
        self.Label9.configure(activeforeground="black")
        self.Label9.configure(anchor='w')
        self.Label9.configure(background="#fdf2f8")
        self.Label9.configure(cursor="fleur")
        self.Label9.configure(disabledforeground="#a3a3a3")
        self.Label9.configure(font=font9)
        self.Label9.configure(foreground="#000000")
        self.Label9.configure(highlightbackground="#d9d9d9")
        self.Label9.configure(highlightcolor="black")
        self.Label9.configure(text='''Mitoses:''')

        self.Label10 = tk.Label(self.Labelframe0)
        self.Label10.place(relx=0.018, rely=0.909, height=34, width=282
                , bordermode='ignore')
        self.Label10.configure(activebackground="#f9f9f9")
        self.Label10.configure(activeforeground="black")
        self.Label10.configure(anchor='w')
        self.Label10.configure(background="#F9C2DE")
        self.Label10.configure(disabledforeground="#a3a3a3")
        self.Label10.configure(font="-family {Segoe UI} -size 10 -weight bold")
        self.Label10.configure(foreground="#000000")
        self.Label10.configure(highlightbackground="#d9d9d9")
        self.Label10.configure(highlightcolor="black")
        self.Label10.configure(text='''Predicted Class''')

        self.Button1 = tk.Button(self.Labelframe0)
        self.Button1.place(relx=0.125, rely=0.768, height=42, width=138
                , bordermode='ignore')
        self.Button1.configure(activebackground="#ececec")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#fdf2f8")
        self.Button1.configure(command=self.predict_class)
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(font=font10)
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(relief="groove")
        self.Button1.configure(text='''Predict Class''')

        self.Entry1 = tk.Entry(self.Labelframe0)
        self.Entry1.place(relx=0.536, rely=0.081, height=30, relwidth=0.221
                , bordermode='ignore')
        self.Entry1.configure(background="white")
        self.Entry1.configure(disabledforeground="#a3a3a3")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(highlightbackground="#d9d9d9")
        self.Entry1.configure(highlightcolor="black")
        self.Entry1.configure(insertbackground="black")
        self.Entry1.configure(selectbackground="#c4c4c4")
        self.Entry1.configure(selectforeground="black")

        self.Entry2 = tk.Entry(self.Labelframe0)
        self.Entry2.place(relx=0.536, rely=0.152, height=30, relwidth=0.221
                , bordermode='ignore')
        self.Entry2.configure(background="white")
        self.Entry2.configure(disabledforeground="#a3a3a3")
        self.Entry2.configure(font="TkFixedFont")
        self.Entry2.configure(foreground="#000000")
        self.Entry2.configure(highlightbackground="#d9d9d9")
        self.Entry2.configure(highlightcolor="black")
        self.Entry2.configure(insertbackground="black")
        self.Entry2.configure(selectbackground="#c4c4c4")
        self.Entry2.configure(selectforeground="black")

        self.Entry3 = tk.Entry(self.Labelframe0)
        self.Entry3.place(relx=0.536, rely=0.222, height=30, relwidth=0.221
                , bordermode='ignore')
        self.Entry3.configure(background="white")
        self.Entry3.configure(disabledforeground="#a3a3a3")
        self.Entry3.configure(font="TkFixedFont")
        self.Entry3.configure(foreground="#000000")
        self.Entry3.configure(highlightbackground="#d9d9d9")
        self.Entry3.configure(highlightcolor="black")
        self.Entry3.configure(insertbackground="black")
        self.Entry3.configure(selectbackground="#c4c4c4")
        self.Entry3.configure(selectforeground="black")

        self.Entry4 = tk.Entry(self.Labelframe0)
        self.Entry4.place(relx=0.536, rely=0.293, height=30, relwidth=0.221
                , bordermode='ignore')
        self.Entry4.configure(background="white")
        self.Entry4.configure(disabledforeground="#a3a3a3")
        self.Entry4.configure(font="TkFixedFont")
        self.Entry4.configure(foreground="#000000")
        self.Entry4.configure(highlightbackground="#d9d9d9")
        self.Entry4.configure(highlightcolor="black")
        self.Entry4.configure(insertbackground="black")
        self.Entry4.configure(selectbackground="#c4c4c4")
        self.Entry4.configure(selectforeground="black")

        self.Entry5 = tk.Entry(self.Labelframe0)
        self.Entry5.place(relx=0.536, rely=0.364, height=30, relwidth=0.221
                , bordermode='ignore')
        self.Entry5.configure(background="white")
        self.Entry5.configure(disabledforeground="#a3a3a3")
        self.Entry5.configure(font="TkFixedFont")
        self.Entry5.configure(foreground="#000000")
        self.Entry5.configure(highlightbackground="#d9d9d9")
        self.Entry5.configure(highlightcolor="black")
        self.Entry5.configure(insertbackground="black")
        self.Entry5.configure(selectbackground="#c4c4c4")
        self.Entry5.configure(selectforeground="black")

        self.Entry6 = tk.Entry(self.Labelframe0)
        self.Entry6.place(relx=0.536, rely=0.434, height=30, relwidth=0.221
                , bordermode='ignore')
        self.Entry6.configure(background="white")
        self.Entry6.configure(disabledforeground="#a3a3a3")
        self.Entry6.configure(font="TkFixedFont")
        self.Entry6.configure(foreground="#000000")
        self.Entry6.configure(highlightbackground="#d9d9d9")
        self.Entry6.configure(highlightcolor="black")
        self.Entry6.configure(insertbackground="black")
        self.Entry6.configure(selectbackground="#c4c4c4")
        self.Entry6.configure(selectforeground="black")

        self.Entry7 = tk.Entry(self.Labelframe0)
        self.Entry7.place(relx=0.536, rely=0.505, height=30, relwidth=0.221
                , bordermode='ignore')
        self.Entry7.configure(background="white")
        self.Entry7.configure(disabledforeground="#a3a3a3")
        self.Entry7.configure(font="TkFixedFont")
        self.Entry7.configure(foreground="#000000")
        self.Entry7.configure(highlightbackground="#d9d9d9")
        self.Entry7.configure(highlightcolor="black")
        self.Entry7.configure(insertbackground="black")
        self.Entry7.configure(selectbackground="#c4c4c4")
        self.Entry7.configure(selectforeground="black")

        self.Entry8 = tk.Entry(self.Labelframe0)
        self.Entry8.place(relx=0.536, rely=0.576, height=30, relwidth=0.221
                , bordermode='ignore')
        self.Entry8.configure(background="white")
        self.Entry8.configure(disabledforeground="#a3a3a3")
        self.Entry8.configure(font="TkFixedFont")
        self.Entry8.configure(foreground="#000000")
        self.Entry8.configure(highlightbackground="#d9d9d9")
        self.Entry8.configure(highlightcolor="black")
        self.Entry8.configure(insertbackground="black")
        self.Entry8.configure(selectbackground="#c4c4c4")
        self.Entry8.configure(selectforeground="black")

        self.Entry9 = tk.Entry(self.Labelframe0)
        self.Entry9.place(relx=0.536, rely=0.646, height=30, relwidth=0.221
                , bordermode='ignore')
        self.Entry9.configure(background="white")
        self.Entry9.configure(disabledforeground="#a3a3a3")
        self.Entry9.configure(font="TkFixedFont")
        self.Entry9.configure(foreground="#000000")
        self.Entry9.configure(highlightbackground="#d9d9d9")
        self.Entry9.configure(highlightcolor="black")
        self.Entry9.configure(insertbackground="black")
        self.Entry9.configure(selectbackground="#c4c4c4")
        self.Entry9.configure(selectforeground="black")

        self.Label11 = tk.Label(self.Labelframe0)
        self.Label11.place(relx=0.536, rely=0.909, height=30, width=124
                , bordermode='ignore')
        self.Label11.configure(activebackground="#f9f9f9")
        self.Label11.configure(activeforeground="black")
        self.Label11.configure(anchor='w')
        self.Label11.configure(background="#F9C2DE")
        self.Label11.configure(disabledforeground="#a3a3a3")
        self.Label11.configure(font="-family {Segoe UI} -size 10 -weight bold")
        self.Label11.configure(foreground="#000000")
        self.Label11.configure(highlightbackground="#d9d9d9")
        self.Label11.configure(highlightcolor="black")
        self.Label11.configure(text=''':''')
    def predict_class(self):
            e1 = int(self.Entry1.get())
            e2 = int(self.Entry2.get())
            e3 = int(self.Entry3.get())
            e4 = int(self.Entry4.get())
            e5 = int(self.Entry5.get())
            e6 = int(self.Entry6.get())
            e7 = int(self.Entry7.get())
            e8 = int(self.Entry8.get())
            e9 = int(self.Entry9.get())
            # testing entry types
            print("Entry 1 type: ",type(e1))
            print("Entry 2 type: ",type(e2))
        # fixing model directory issue
            THIS_FOLDER = os.path.dirname(os.path.abspath(__file__))
            filename = os.path.join(THIS_FOLDER, 'knn_train_model.joblib')
        # loading our model
            knn = joblib.load(filename)
        # given sample
            entry_data = np.array([[e1,e2,e3,e4,e5,e6,e7,e8,e9]])
            given_sample = entry_data.reshape(len(entry_data),-1)
        # making prediction 
            prediction = knn.predict(given_sample)

            if prediction == 2:
                    # prediction class as benign
                    print("Benign")
                    self.Label11.configure(text='''Benign''')
            else:
                    # prediction class as malignant
                    print("malignant")
                    self.Label11.configure(text='''Malignant''')

"""
 Class: (2 for benign, 4 for malignant)
"""

"""            if prediction == 2:
                    # Predicting class as benign
                    print("benign")
                    self.Label11.configure(text='''Benign''')

            if prediction == 4:
                    # predicting class as malignant
                    print("malignent")
                    self.Label11.configure(text='''Malignant''')


"""                          

"""
now all the entery are in str format , first convert them to 
"""
        

if __name__ == '__main__':
    make_dpi_aware()
    vp_start_gui()





